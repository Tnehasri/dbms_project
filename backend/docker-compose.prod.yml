# Production Docker Compose for Image Gallery Stack

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: imagegallery_postgres_prod
    environment:
      POSTGRES_DB: imagegallery
      POSTGRES_USER: gallery_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - imagegallery_network
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: imagegallery_elasticsearch_prod
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - imagegallery_network
    restart: unless-stopped

  # Flask Backend
  backend:
    build: ./backend
    container_name: imagegallery_backend_prod
    environment:
      - DATABASE_URL=postgresql://gallery_user:${POSTGRES_PASSWORD}@postgres:5432/imagegallery
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - imagegallery_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build: ./frontend
    container_name: imagegallery_frontend_prod
    environment:
      - REACT_APP_API_URL=${API_URL}
    depends_on:
      - backend
    networks:
      - imagegallery_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: imagegallery_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - imagegallery_network
    restart: unless-stopped

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  imagegallery_network:
    driver: bridge

